@* @model IEnumerable<LoanApplication.Models.Repayment> *@



@* @{ *@

@* 	ViewData["Title"] = "Repayment Schedule"; *@

@* } *@



@* <h1>Repayment Schedule</h1> *@



@* @if (TempData["SuccessMessage"] != null) *@

@* { *@

@* 	<div class="alert alert-success">@TempData["SuccessMessage"]</div> *@

@* } *@

@* @if (TempData["ErrorMessage"] != null) *@

@* { *@

@* 	<div class="alert alert-danger">@TempData["ErrorMessage"]</div> *@

@* } *@



@* <table class="table"> *@

@* 	<thead> *@

@* 		<tr> *@

@* 			<th> *@

@* 				@Html.DisplayNameFor(model => model.DueDate) *@

@* 			</th> *@

@* 			<th> *@

@* 				@Html.DisplayNameFor(model => model.AmountDue) *@

@* 			</th> *@

@* 			<th> *@

@* 				@Html.DisplayNameFor(model => model.PaymentDate) *@

@* 			</th> *@

@* 			<th> *@

@* 				@Html.DisplayNameFor(model => model.PaymentStatus) *@

@* 			</th> *@

@* 			<th></th> *@

@* 		</tr> *@

@* 	</thead> *@

@* 	<tbody> *@

@* 		@foreach (var item in Model) *@

@* 		{ *@

@* 			<tr> *@

@* 				<td> *@

@* 					@Html.DisplayFor(modelItem => item.DueDate) *@

@* 				</td> *@

@* 				<td> *@

@* 					@Html.DisplayFor(modelItem => item.AmountDue) *@

@* 				</td> *@

@* 				<td> *@

@* 					@Html.DisplayFor(modelItem => item.PaymentDate) *@

@* 				</td> *@

@* 				<td> *@

@* 					@Html.DisplayFor(modelItem => item.PaymentStatus) *@

@* 				</td> *@

@* 				<td> *@

@* 					@if (item.PaymentStatus == LoanApplication.Models.PaymentStatus.PENDING) *@

@* 					{ *@

@* 						<a asp-action="ProcessPayment" asp-route-repaymentId="@item.RepaymentId" class="btn btn-sm btn-primary">Make Payment</a> *@

@* 					} *@

@* 					else *@

@* 					{ *@

@* 						<span class="text-success">Paid</span> *@

@* 					} *@

@* 				</td> *@

@* 			</tr> *@

@* 		} *@

@* 	</tbody> *@

@* </table> *@



@* @if (Model.Any()) *@

@* { *@

@* 	<a asp-action="GetOutstandingBalance" *@
@* 		   asp-route-applicationId="@Model.First().ApplicationId" *@
@* 		   asp-route-returnUrl="@Context.Request.Path@Context.Request.QueryString" *@
@* 		   class="btn btn-info">View Outstanding Balance</a> *@

@* } *@


@model IEnumerable<LoanApplication.Models.Repayment>

@{
    ViewData["Title"] = "Repayment Schedule";
}

<div class="container mt-4">
    <h1 class="display-4">Repayment Schedule</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.DueDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AmountDue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PaymentDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PaymentStatus)
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.DueDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AmountDue)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PaymentDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PaymentStatus)
                            </td>
                            <td>
                                @if (item.PaymentStatus == LoanApplication.Models.PaymentStatus.PENDING)
                                {
                                    <a asp-action="ProcessPayment" asp-route-repaymentId="@item.RepaymentId" class="btn btn-sm btn-primary">
                                        <i class="bi bi-credit-card me-1"></i> Pay Now
                                    </a>
                                }
                                else
                                {
                                    <span class="text-success">
                                        <i class="bi bi-check-circle-fill me-1"></i> Paid
                                    </span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-3">
            <a asp-action="GetOutstandingBalance"
               asp-route-applicationId="@Model.First().ApplicationId"
               asp-route-returnUrl="@Context.Request.Path@Context.Request.QueryString"
               class="btn btn-info">
                <i class="bi bi-cash-coin me-1"></i> View Outstanding Balance To Pay
            </a>
        </div>
    }
    else
    {
        <p class="lead">No repayment schedule available for this loan.</p>
    }
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.min.css">
}

@section Scripts {
    <script>
        // Optional: Add any specific JavaScript for this page here.
    </script>
}